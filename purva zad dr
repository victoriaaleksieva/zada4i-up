#include <iostream>
bool isLeap(int year)
{
	return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
	
}
int daysInMonth(int month,int year)
{
	if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
	{
		return 31;
	}
	else if (month == 2)
	{ 
		if (isLeap(year))
		{
			return 29;
		}
		else
		{
			return 28;
		}
	}
	else
	{
		return 30;
	}
}
int dayOfWeek(int day,int month,int year)
{
	int lastTwoDigs = (year % 100);

	int yearCode= (lastTwoDigs + (lastTwoDigs / 4)) % 7;
	int monthCode=0;
	int centuryCode;
	int temp = 0;
	int leapYearCode = 0;
	switch (month)
	{
	case 1:
		monthCode = 0;
		break;
	case 2:
		monthCode = 3;
		break;
	case 3:
		monthCode = 3;
		break;
	case 4:
		monthCode = 6;
		break;
	case 5:
		monthCode = 1;
		break;
	case 6:
		monthCode = 4;
		break;
	case 7:
		monthCode = 6;
		break;
	case 8:
		monthCode = 2;
		break;
	case 9:
		monthCode = 5;
		break;
	case 10:
		monthCode = 0;
		break;
    case 11:
		monthCode = 3;
		break;
	case 12:
		monthCode = 5;
		break;

		return 0;

	}
	if (year >= 1900 && year < 2000)
	{
		centuryCode = 0;
	}
	else if (year >= 2000 && year < 2100)
	{
		centuryCode = 6;
	}
	else
	{
		centuryCode = 4;
	}

	temp = yearCode + monthCode + day + centuryCode;
	if ((isLeap(year) == 1) && (month == 1 || month == 2))
	{
		temp-=1;
	}
	
	return temp % 7;


}
int main()
{
	int day;
	int month;
	int year;
	
	int dayOfTheWeek=0;
	do
	{
		std::cin >> day;
	} while (day < 1 || day>31);
	do
	{
		std::cin >> month;
	} while (month < 1 || month>12);
	do
	{
		std::cin >> year;
	} while (year < 1900 || year>2100);

	int nextDay = day;
	int nextMonth = month;
	int nextYear = year;

	if (daysInMonth(month, year) == day)
	{

		nextDay = 1;
		if (month + 1 > 12)
		{
			nextMonth = 1;
			nextYear = year + 1;
			
		}
		else
		{
			nextMonth = month + 1;
		}
		
	}
	else
	{
		nextDay = day + 1;

	}
	switch (dayOfWeek(nextDay, nextMonth ,nextYear ))
	{
	case 0:
		std::cout << "Sunday";
		break;
	case 1:
		std::cout << "Monday";
		break;
	case 2:
		std::cout << "Tuesday";
		break;
	case 3:
		std::cout << "Wednesday";
		break;
	case 4:
		std::cout << "Thursday";
		break;
	case 5:
		std::cout << "Friday";
		break;
	case 6:
		std::cout << "Saturday";
		break;
		return 0;

	}



	std::cout<< nextDay << " " << month << " " << year;
}
